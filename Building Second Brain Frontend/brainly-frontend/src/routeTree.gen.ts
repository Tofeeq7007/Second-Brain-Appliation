/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestPageRouteImport } from './routes/testPage'
import { Route as HomeRouteImport } from './routes/Home'

const SignupLazyRouteImport = createFileRoute('/signup')()
const IndexLazyRouteImport = createFileRoute('/')()

const SignupLazyRoute = SignupLazyRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))
const TestPageRoute = TestPageRouteImport.update({
  id: '/testPage',
  path: '/testPage',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/Home',
  path: '/Home',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/Home': typeof HomeRoute
  '/testPage': typeof TestPageRoute
  '/signup': typeof SignupLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/Home': typeof HomeRoute
  '/testPage': typeof TestPageRoute
  '/signup': typeof SignupLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/Home': typeof HomeRoute
  '/testPage': typeof TestPageRoute
  '/signup': typeof SignupLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/Home' | '/testPage' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Home' | '/testPage' | '/signup'
  id: '__root__' | '/' | '/Home' | '/testPage' | '/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  HomeRoute: typeof HomeRoute
  TestPageRoute: typeof TestPageRoute
  SignupLazyRoute: typeof SignupLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/testPage': {
      id: '/testPage'
      path: '/testPage'
      fullPath: '/testPage'
      preLoaderRoute: typeof TestPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Home': {
      id: '/Home'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HomeRoute: HomeRoute,
  TestPageRoute: TestPageRoute,
  SignupLazyRoute: SignupLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
